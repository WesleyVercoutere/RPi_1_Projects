V0.1.0 :
Versie met 1 class en de io worden constant opgevraagd en weggeschreven. Nog niet OOP.

V0.1.1 :
Zelfde versie als V0.1.0 maar de io wordt aangestuurd met interrupts en callbacks

V0.1.2 :
Versie met de GPIO als afzonderlijk objecten, nog geen objecten voorzien voor de pcf8574.

V0.1.3 :
Versie waar input en output classes zijn bijgemaakt  om de pcf8574 io aan te sturen. 
Deze code werkt niet 100% maar de code zelf is ook niet ok. In de classes DigitalInputPCF8574 en DigitalOutputPCF8574 wordt dezelfde code herhaald. Ook voert elke instantie van deze classes dezelfde code uit voor hetzelfde doel.

V0.1.4 :
Versie met afzonderlijke classe voor PCF8574.
Deze versie een eerste aanzet tot OOP. Maar het probleem hier is dat de Main classe 2 taken uitvoert, nl.: 
1. Het opbouwen / configureren van de applicatie
2. Ze bevat de logica van de applicatie
In OOP is het de bedoeling dat elke classe slechts 1 taak vervuld. Ook het uitbreiden van een applicatie moet eenvoudig en op een enkele plaats kunnen gebeuren. 
Dat de objecten los gekoppeld zijn en sterk samenwerken (loosely coupled and highly cohesive).

V0.1.5 : (later)
Versie met het splitsen van de main class in een configuratie classe en een classe voor de logica van de applicatie. Dit is nodig om makkelijk verschillende frontends toe te voegen.

V0.1.6 : 
In vorige versie worden de leds getoggeld vanuit een array in de LogicManager. Deze variabele of lijst vervangen we door een repository(verzameling) van domeinobjecten.

V0.2.0 : (later)
Versie met GUI (tkinter).

V0.2.1 : (later)
Versie met lcd schermpje


